// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique @db.VarChar(100)
  name        String       @db.VarChar(100)
  role        String       @db.VarChar(100)
  password    String       @db.VarChar(100)
  is_active   Boolean      @default(false)
  activation  Boolean      @default(false)
  kode_otp    Int?
  nim         String?      @db.VarChar(100)
  religion    String?
  status      String?      @db.VarChar(100)
  gender      String?      @db.VarChar(100)
  phone       String?      @db.VarChar(100)
  posisi_id   Int?
  instansi_id Int?
  jurusan_id  Int?
  surat       String?      @db.VarChar(100)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  jurusan     Jurusan?     @relation(fields: [jurusan_id], references: [id])
  instansi    Instansi?    @relation(fields: [instansi_id], references: [id])
  posisi      Posisi?      @relation(fields: [posisi_id], references: [id])
  periode     Periode[]
  pengajuan   Pengajuan[]
  sertifikat  Sertifikat[]
  project     Project[]

  @@map("user")
}

model Jurusan {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User[]

  @@map("jurusan")
}

model Instansi {
  id             Int      @id @default(autoincrement())
  name           String   @unique @db.VarChar(200)
  kuota          Int
  kuota_tersedia Int
  is_active      Boolean
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User[]

  @@map("instansi")
}

model Posisi {
  id             Int         @id @default(autoincrement())
  nama           String      @db.VarChar(100)
  kuota          Int
  kuota_tersedia Int
  prasyarat      Json
  is_active      Boolean
  sertifikat     String?     @db.VarChar(100)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  user           User[]
  pengajuan      Pengajuan[]

  @@map("posisi")
}

model Periode {
  id                Int         @id @default(autoincrement())
  user_id           Int
  tanggal_pengajuan String      @db.VarChar(100)
  tanggal_selesai   String      @db.VarChar(100)
  jenis_pengajuan   String      @db.VarChar(100)
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  is_active         Boolean     @default(false)
  user              User        @relation(fields: [user_id], references: [id])
  pengajuan         Pengajuan[]

  @@map("periode")
}

model Pengajuan {
  id                    Int         @id @default(autoincrement())
  user_id               Int
  posisi_id             Int
  periode_id            Int
  is_active             Boolean?
  status_administrasi   String?     @db.VarChar(100)
  status_tes_kemampuan  String?     @db.VarChar(100)
  status_wawancara      String?     @db.VarChar(100)
  status                String?     @db.VarChar(100)
  tanggal_wawancara     String?     @db.VarChar(100)
  tanggal_tes_kemampuan String?     @db.VarChar(100)
  link_tes_kemampuan    String?     @db.Text
  link_wawancara        String?     @db.Text
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
  user                  User        @relation(fields: [user_id], references: [id])
  posisi                Posisi      @relation(fields: [posisi_id], references: [id])
  periode               Periode     @relation(fields: [periode_id], references: [id])
  sertifikat            Sertifikat?
  project               Project[]

  @@map("pengajuan")
}

model Sertifikat {
  id           Int       @id @default(autoincrement())
  user_id      Int
  pengajuan_id Int       @unique
  location     String    @db.Text
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  user         User      @relation(fields: [user_id], references: [id])
  kegiatan     Pengajuan @relation(fields: [pengajuan_id], references: [id])

  @@map("sertifikat")
}

model Project {
  id           Int       @id @default(autoincrement())
  judul        String    @db.VarChar(200)
  keterangan   String    @db.Text
  persentase   Int
  user_id      Int
  pengajuan_id Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  user         User      @relation(fields: [user_id], references: [id])
  kegiatan     Pengajuan @relation(fields: [pengajuan_id], references: [id])

  @@map("project")
}

model Notification {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(200)
  subtitle  String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("notification")
}

model Storage {
  name     String @unique
  location String @db.Text

  @@map("storage")
}
